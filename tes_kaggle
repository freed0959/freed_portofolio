{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30698,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport pyodbc\nimport urllib\nfrom sqlalchemy import create_engine,text\n\nserver   = 'sqlserver-sysdev3.database.windows.net'\ndatabase = 'storage-db'\nusername = 'admin-sysdev'\npassword = 'Adaro123'   \ndriver   = '{ODBC Driver 17 for SQL Server}'\n\nconn = f\"\"\"Driver={driver};Server=tcp:{server},1433;Database={database};\nUid={username};Pwd={password};Encrypt=yes;TrustServerCertificate=no;Connection Timeout=30;\"\"\"\n\nparams = urllib.parse.quote_plus(conn)\nconn_str = 'mssql+pyodbc:///?autocommit=true&odbc_connect={}'.format(params)\nengine = create_engine(conn_str, echo=True)\n\nquery = 'SELECT Tanggal, Jarak_Outlet, Dimanfaatkan, Dekat_Pemukiman, Curah_Hujan, Debit_Outlet_Diizinkan, Debit_Actual_Outlet, TSS_Actual_Outlet, Project_Bukaan_lahan, TSS_Sungai_Sebelum_Project, TSS_Sungai_Sesudah_Project, TSS_Sungai FROM qhse.[Tbl_tss_padang_panjang]'\n\n#importing datasets  \n# load dataset\nwith engine.connect() as connection:\n    df = pd.read_sql_query(sql=text(query), con=connection)\n\ndf.tail()","metadata":{"execution":{"iopub.status.busy":"2024-05-20T12:39:41.796986Z","iopub.execute_input":"2024-05-20T12:39:41.797371Z","iopub.status.idle":"2024-05-20T12:39:43.371204Z","shell.execute_reply.started":"2024-05-20T12:39:41.797342Z","shell.execute_reply":"2024-05-20T12:39:43.368421Z"},"trusted":true},"execution_count":1,"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","Cell \u001b[0;32mIn[1], line 3\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mpandas\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mpd\u001b[39;00m\n\u001b[1;32m      2\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mnumpy\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mnp\u001b[39;00m\n\u001b[0;32m----> 3\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mpyodbc\u001b[39;00m\n\u001b[1;32m      4\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01murllib\u001b[39;00m\n\u001b[1;32m      5\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01msqlalchemy\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m create_engine,text\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'pyodbc'"],"ename":"ModuleNotFoundError","evalue":"No module named 'pyodbc'","output_type":"error"}]}]}